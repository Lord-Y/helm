apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "versions.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "versions.labels" . | nindent 4 }}
    app: {{ include "versions.name" . }}
    apptype: {{ .Values.apptype }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "versions.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/hpa: {{ include (print $.Template.BasePath "/hpa.yaml") . | sha256sum }}
        {{ if .Values.pod.annotations -}}
{{ .Values.pod.annotations | toYaml | indent 8 | trim }}
        {{- end }}
      labels:
        {{- include "versions.selectorLabels" . | nindent 8 }}
        app: {{ include "versions.name" . }}
        apptype: {{ .Values.apptype }}
        {{- if eq .Values.image.pullPolicy "Always" -}}
        {{- if and (.Values.image.tag) (eq .Values.image.tag "latest") }}
        date: {{ now | unixEpoch | quote }}
        {{- end -}}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 6 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
      {{- end }}
      terminationGracePeriodSeconds: !!int "{{ .Values.terminationGracePeriodSeconds }}"
      {{- with .Values.extraInitContainers }}
      initContainers:
{{ toYaml . | indent 6 }}
      {{- end }}
      serviceAccountName: {{ include "versions.serviceAccountName" . }}
      securityContext:
{{ .Values.pod.securityContext | toYaml | indent 8 }}
      containers:
      - name: {{ .Values.container.namePrefix }}{{ include "versions.name" . }}
        securityContext:
        {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.container.port }}
          protocol: TCP
        {{- if .Values.metrics.serviceMonitor.app.enabled }}
        - name: metrics
          containerPort: {{ .Values.metrics.serviceMonitor.app.port }}
          protocol: TCP
        {{- end }}
        livenessProbe:
        {{- if .Values.livenessProbe.custom }}
{{ .Values.livenessProbe.custom | toYaml | indent 10 }}
        {{- else }}
{{ .Values.livenessProbe.default | toYaml | indent 10 }}
        {{- end }}
        readinessProbe:
        {{- if .Values.readinessProbe.custom }}
{{ .Values.readinessProbe.custom | toYaml | indent 10 }}
        {{- else }}
{{ .Values.readinessProbe.default | toYaml | indent 10 }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
{{ .Values.resources | toYaml | indent 10 }}
        volumeMounts:
        {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          readOnly: {{ .readOnly | default "true" }}
        {{- end }}
        {{- range .Values.extraConfigmapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath | default "" }}
          readOnly: {{ .readOnly }}
        {{- end }}
        {{- range .Values.extraVolumeMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath | default "" }}
          readOnly: {{ .readOnly }}
        {{- end }}
        {{- if .Values.configMaps.enabled }}
        - name: {{ include "versions.name" . }}
          mountPath: "{{ .Values.configMaps.path }}"
        {{- end }}
        {{- with .Values.lifecycle }}
        lifecycle:
{{ toYaml . | indent 10 }}
        {{- end }}
      {{- with .Values.extraContainers }}
{{ toYaml . | indent 6 }}
      {{- end }}
      volumes:
      {{- range .Values.extraConfigmapMounts }}
      - name: {{ .name }}
        configMap:
          name: {{ .configMap }}
      {{- end }}
      {{- range .Values.extraSecretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
          defaultMode: {{ .defaultMode | default "256" }}
      {{- end }}
      {{- range .Values.extraVolumeMounts }}
      - name: {{ .name }}
        persistentVolumeClaim:
          claimName: {{ .existingClaim }}
      {{- end }}
      {{- if .Values.configMaps.enabled }}
      - name: {{ include "versions.name" . }}
        configMap:
          name: {{ include "versions.name" . }}
      {{- end }}

