revisionHistoryLimit: 3
replicaCount: 1
hpa:
  enabled: false
  replicas:
    min: 2
    max: 3
  type: cpu
  metrics:
    utilization:
      cpu: 50
      memory: 50
      packetsPerSecond: 500
      requestsPerSecond: 1k

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name:

service:
  type: ClusterIP
  port: 80
  annotations: {}
  clusterIP: "" # only here to fix msg spec.clusterIP: Invalid value: "": field is immutable
  loadBalancerIP:

securityContext: {}
  # # capabilities:
  # #   drop:
  # #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000
  # allowPrivilegeEscalation: false

pod:
  securityContext: {}
    # fsGroup: 2000
  annotations: {}

apptype: golang

ingress:
  nginx:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
    - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  gce:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
    - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
  limits:
   cpu: 100m
   memory: 128Mi
  requests:
   cpu: 100m
   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

lifecycle: {}

terminationGracePeriodSeconds: 120

container:
  namePrefix: ""
  port: &cport 80

livenessProbe:
  custom: {}
  default:
    failureThreshold: 3
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 2
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10

readinessProbe:
  custom: {}
  default:
    failureThreshold: 3
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 2
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10

env: {}
  #APP_PORT: *cport

configMaps:
  enabled: false
  path: /config
  contents:

extraConfigmapMounts: []
# - name: certs-configmap
#   mountPath: /etc/grafana/ssl/
#   configMap: certs-configmap
#   readOnly: true

extraSecretMounts: []
# - name: secret-files
#   mountPath: /etc/secrets
#   secretName: grafana-secret-files
#   defaultMode: 256 # (optional)
#   readOnly: true

extraVolumeMounts: []
# - name: extra-volume
#   mountPath: /mnt/volume
#   readOnly: true
#   existingClaim: volume-claim

extraInitContainers: []
#- name: proxy
#  image: quay.io/gambol99/keycloak-proxy:latest
#  args:
#  - -provider=github
#  - -upstream-url=http://127.0.0.1:3000
#  ports:
#  - name: proxy-web
#    containerPort: 4181

extraContainers: []
#- name: proxy
#  image: quay.io/gambol99/keycloak-proxy:latest
#  args:
#  - -provider=github
#  - -upstream-url=http://127.0.0.1:3000
#  ports:
#  - name: proxy-web
#    containerPort: 4181

metrics:
  serviceMonitor:
    interval: 15s
    svc:
      enabled: false
    app:
      enabled: false
      path: /metrics
      port: 9101

redis:
  enabled: false

mariadb:
  enabled: false

postgresql-ha:
  enabled: false
